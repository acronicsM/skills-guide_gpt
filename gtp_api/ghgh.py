import requests
import json

def make_api_request():
    url = 'https://llm.api.cloud.yandex.net/llm/v1alpha/instruct'
    headers = {
        'Content-Type': 'application/json',
        'Authorization': 'Api-Key AQVN0uhHwFvbWfqnF2fnEmIj4C8ndmS5q0_ogdW4',
        'x-folder-id': 'b1gg7s98ajrgid8cbnin'
    }
    data = {
        "model": "general",
        "instruction_text": "Ты соискатель на должность которому нужно написать сопроводительное письмо",
        "request_text": "Мы ищем опытного и образованного преподавателя Python для работы в нашей онлайн-школе. Также требуется способность проводить практические вебинары и консультировать учеников. Обязанности: Проведение вебинаров 2-3 раза в неделю продолжительностью 1-2 часа с пояснением теоретического материала Консультирование учеников и ответы на их вопросы Обеспечение поддержки ученикам по курсу Python и другим связанным вопросам Установление связи с учениками, которые испытывают затруднения с пониманием материала и предоставление более детальных объяснений Требования: Знание Python на среднем уровне Умение ясно объяснять сложные концепции и взаимодействовать с учениками Хорошие коммуникативные и организационные навыки Ответственность и терпение при работе с учениками разного уровня подготовки Плюсом будет - Опыт преподавания Python или связанных предметов, но можно и без Проверка домашних заданий учеников Мы предлагаем: Конкурентную заработную плату и гибкий график работы, включая проведение вебинаров и консультаций по договоренности Возможность принимать участие в развитии образовательной программы и использовать свои знания и опыт Возможность работать с целеустремленными и мотивированными учениками Поддержка и сотрудничество с профессиональным и дружелюбным коллективом Если вы готовы поделиться своей экспертизой в Python и вдохновить новых студентов для достижения успеха, пожалуйста, отправьте свое резюме на указанный адрес электронной почты. Мы ожидаем ваше резюме с нетерпением!",
        "generation_options": {
            "max_tokens": 1500,
            "temperature": 0.6
        }
    }

    response = requests.post(url, headers=headers, data=json.dumps(data))
    response_data = response.json()
    return response_data

response_data = make_api_request()
print(response_data)